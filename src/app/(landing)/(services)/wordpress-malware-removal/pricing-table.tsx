'use client';
import { useState } from 'react';
import { usePricing } from '@/hooks/usePricing';
import Checkout from '@/components/payment/checkout';
import { formatCurrency } from '@/lib/utils';

const symptoms = [
  'Unexpected redirects',
  'Slow website performance',
  'Strange pop-ups or ads',
  'Unknown files or plugins',
  'Google warning about the site',
  'Blacklisted by security services',
  'Unauthorized access attempts',
  'Spam emails being sent from the site',
  'Malware detected by scanner',
  'Hosting suspended',
  'Unwanted errors',
];

const PricingTable = ({
  origPrice,
  price,
  productId,
}: {
  origPrice: number;
  price: number;
  productId: string;
}) => {
  const [selectedSymptoms, setSelectedSymptoms] = useState<string[]>([]);
  const {
    quantity,
    totalPrice,
    totalOriginalPrice,
    handleIncrease,
    handleDecrease,
  } = usePricing({ productId, price, origPrice });

  const handleSymptomChange = (symptom: string) => {
    setSelectedSymptoms((prevSymptoms) =>
      prevSymptoms.includes(symptom)
        ? prevSymptoms.filter((s) => s !== symptom)
        : [...prevSymptoms, symptom],
    );
  };

  return (
    <>
      <div className='gap-8 grid grid-cols-1 md:grid-cols-2'>
        {/* Symptoms List */}
        <div>
          <h3 className='mb-4 font-semibold text-xl text-zinc-800 dark:text-zinc-200'>
            Common Issues Indicating Malware
          </h3>
          <ul className='space-y-4'>
            {symptoms.map((symptom, index) => (
              <li key={index} className='flex items-start'>
                <input
                  type='checkbox'
                  id={`symptom-${index}`}
                  name='symptoms'
                  value={symptom}
                  checked={selectedSymptoms.includes(symptom)}
                  onChange={() => handleSymptomChange(symptom)}
                  className='border-gray-300 mr-3 rounded focus:ring-indigo-500 w-4 h-4 text-indigo-600'
                />
                <label
                  htmlFor={`symptom-${index}`}
                  className='text-base text-zinc-700 dark:text-zinc-300'>
                  {symptom}
                </label>
              </li>
            ))}
          </ul>
        </div>

        <div className='flex flex-col justify-center items-center'>
          <div className='bg-gray-100 dark:bg-gray-900 shadow-md p-6 rounded-lg w-full'>
            <h3 className='mb-4 font-semibold text-2xl text-center text-zinc-800 dark:text-zinc-200'>
              Malware Removal Service
            </h3>

            <div className='mb-6 text-center'>
              {totalOriginalPrice > price && (
                <span className='block font-bold text-2xl text-zinc-500 dark:text-zinc-400 line-through'>
                  {formatCurrency({ amount: totalOriginalPrice })}
                </span>
              )}
              <span className='block font-bold text-4xl text-zinc-800 dark:text-zinc-200'>
                {formatCurrency({ amount: totalPrice })}
              </span>
              <span className='block mt-2 text-sm text-zinc-600 dark:text-zinc-400'>
                One-time fee (for {quantity} {quantity > 1 ? 'sites' : 'site'})
              </span>
            </div>

            {/* Quantity Selector */}
            <div className='mb-6 text-center'>
              <label
                htmlFor='quantity'
                className='block mb-2 text-sm text-zinc-600 dark:text-zinc-400'>
                Number of sites
              </label>
              <div className='inline-flex items-center space-x-4'>
                <button
                  onClick={handleDecrease}
                  type='button'
                  disabled={quantity === 1}
                  className={`${
                    quantity === 1
                      ? 'bg-gray-300 cursor-not-allowed'
                      : 'bg-gray-200 dark:bg-gray-700'
                  } px-4 py-2 rounded-lg text-zinc-800 dark:text-zinc-200`}>
                  -
                </button>
                <span className='font-semibold text-xl text-zinc-800 dark:text-zinc-200'>
                  {quantity}
                </span>
                <button
                  onClick={handleIncrease}
                  type='button'
                  className='bg-gray-200 dark:bg-gray-700 px-4 py-2 rounded-lg text-zinc-800 dark:text-zinc-200'>
                  +
                </button>
              </div>
            </div>

            <p className='mb-6 text-center text-sm text-zinc-600 dark:text-zinc-400'>
              Includes full site scan, malware removal, and security hardening.
            </p>

            <Checkout
              productId={productId}
              metaData={selectedSymptoms}
              quantity={quantity}
            />
          </div>
        </div>
      </div>
    </>
  );
};

export default PricingTable;
